<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

   <!-- ======================== FILTER CHAIN ======================= -->

	<!--  if you wish to use channel security, add "channelProcessingFilter," in front
	      of "httpSessionContextIntegrationFilter" in the list below 
	        
	        /jsp/**=httpSessionContextIntegrationFilter,authenticationProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
            /j_acegi_security_check=httpSessionContextIntegrationFilter, authenticationProcessingFilter, exceptionTranslationFilter,filterInvocationInterceptor
	      
	      
	      -->
	<bean id="filterChainProxy" class="org.acegisecurity.util.FilterChainProxy">
      <property name="filterInvocationDefinitionSource">
         <value>
		    CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
		    PATTERN_TYPE_APACHE_ANT
		    /curator/credentials/reset-password.html=httpSessionContextIntegrationFilter,authenticationProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
		    /curator/**=httpSessionContextIntegrationFilter,authenticationProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor, WCTPasswordExpiredFilter
		    /jsp/**=httpSessionContextIntegrationFilter,authenticationProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
            /j_acegi_security_check=httpSessionContextIntegrationFilter, authenticationProcessingFilter, exceptionTranslationFilter,filterInvocationInterceptor
         </value>
      </property>
    </bean>
    
    <bean id="WCTPasswordExpiredFilter" class="org.webcurator.auth.dbms.WCTForcePasswordChange" abstract="false" singleton="true" lazy-init="default" autowire="default" dependency-check="default">
    	<property name="auditor"><ref bean="audit"/></property>
    </bean>

   <!-- ======================== AUTHENTICATION ======================= -->

	<bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager" abstract="false" singleton="true" lazy-init="default" autowire="default" dependency-check="default">
		<property name="providers">
			<list>
				<!-- Remove the comments if you want LDAP authentication to occur -->
     				<!-- <ref bean="ldapAuthenticator" /> -->
				<ref bean="daoAuthenticationProvider" />
			</list>
		</property>
	</bean>
	
   <bean id="initialDirContextFactory" class="org.acegisecurity.ldap.DefaultInitialDirContextFactory">
      <constructor-arg value="${ldap.url}"/>    
	</bean>
    
	<bean id="ldapAuthenticator" class="org.acegisecurity.providers.ldap.LdapAuthenticationProvider" abstract="false" singleton="true" lazy-init="default" autowire="default" dependency-check="default">
		<constructor-arg>
	        <bean class="org.acegisecurity.providers.ldap.authenticator.BindAuthenticator">
	           <constructor-arg><ref local="initialDirContextFactory"/></constructor-arg>
	           <property name="userDnPatterns"><list><value>${ldap.dn}</value></list></property>
	        </bean>
	      </constructor-arg>
 	      <constructor-arg>
	        <bean class="org.webcurator.auth.ldap.WCTAuthoritiesPopulator">
	        	<property name="authDAO"><ref bean="userRoleDAO"/></property>
	        </bean>
	      </constructor-arg>
	</bean>
	
	<bean id="daoAuthenticationProvider" class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
  		<property name="userDetailsService"><ref bean="jdbcDaoImpl"/></property>
  		<property name="saltSource"><ref bean="saltSource"/></property>
  		<property name="passwordEncoder"><ref bean="passwordEncoder"/></property>
	</bean>
	
	<bean id="saltSource" class="org.acegisecurity.providers.dao.salt.SystemWideSaltSource">
		<property name="systemWideSalt"><value>Rand0mS4lt</value></property>
	</bean>
	
	<bean id="passwordEncoder" class="org.acegisecurity.providers.encoding.ShaPasswordEncoder">
	</bean>

	<bean id="jdbcDaoImpl" class="org.webcurator.auth.dbms.WCTDAOAuthenticationProvider">
	  <property name="dataSource"><ref bean="dataSource"/></property>
	  <property name="usersByUsernameQuery"><value>select usr_username, usr_password, usr_active, usr_force_pwd_change from ${hibernate.default_schema}.WCTUSER WHERE usr_username = ?</value></property>
	  <property name="authoritiesByUsernameQuery"><value>SELECT 
														  distinct PRV_CODE
														FROM 
														  ${hibernate.default_schema}.WCTUSER,
														  ${hibernate.default_schema}.WCTROLE,
														  ${hibernate.default_schema}.USER_ROLE,
														  ${hibernate.default_schema}.ROLE_PRIVILEGE
														WHERE 
														  PRV_ROLE_OID = ROL_OID and
														  URO_USR_OID = USR_OID and
														  URO_ROL_OID = ROL_OID and
														  usr_username = ?
	</value></property>
	<property name="rolePrefix"><value>ROLE_</value></property>
	</bean>
   

   <!-- Automatically receives AuthenticationEvent messages -->
   <bean id="loggerListener" class="org.acegisecurity.event.authentication.LoggerListener"/>

   <bean id="httpSessionContextIntegrationFilter" class="org.acegisecurity.context.HttpSessionContextIntegrationFilter">
   </bean>

   <!-- ===================== HTTP CHANNEL REQUIREMENTS ==================== -->

   <!-- You will need to uncomment the "Acegi Channel Processing Filter"
        <filter-mapping> in web.xml for the following beans to be used -->

   <bean id="channelProcessingFilter" class="org.acegisecurity.securechannel.ChannelProcessingFilter">
      <property name="channelDecisionManager"><ref local="channelDecisionManager"/></property>
      <property name="filterInvocationDefinitionSource">
         <value>
			    CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				\A/acegilogin.jsp.*\Z=REQUIRES_SECURE_CHANNEL
				\A.*\Z=REQUIRES_INSECURE_CHANNEL
         </value>
      </property>
   </bean>

   <bean id="channelDecisionManager" class="org.acegisecurity.securechannel.ChannelDecisionManagerImpl">
      <property name="channelProcessors">
         <list>
            <ref local="secureChannelProcessor"/>
            <ref local="insecureChannelProcessor"/>
         </list>
      </property>
   </bean>

   <bean id="secureChannelProcessor" class="org.acegisecurity.securechannel.SecureChannelProcessor"/>
   <bean id="insecureChannelProcessor" class="org.acegisecurity.securechannel.InsecureChannelProcessor"/>

   <!-- ===================== HTTP REQUEST SECURITY ==================== -->

   <bean id="exceptionTranslationFilter" class="org.acegisecurity.ui.ExceptionTranslationFilter">
      <property name="authenticationEntryPoint"><ref local="authenticationProcessingFilterEntryPoint"/></property>
   </bean>

   <bean id="authenticationProcessingFilter" class="org.webcurator.auth.WCTAuthenticationProcessingFilter">
      <property name="authenticationManager"><ref bean="authenticationManager"/></property>
      <property name="authenticationFailureUrl"><value>/logon.jsp?failed=true</value></property>
      <property name="defaultTargetUrl"><value>/</value></property>
      <property name="filterProcessesUrl"><value>/j_acegi_security_check</value></property>
      <property name="authDAO"><ref bean="userRoleDAO"/></property>
      <property name="auditor"><ref bean="audit"/></property>
   </bean>
   
   <bean id="authenticationProcessingFilterEntryPoint" class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint" abstract="false" singleton="true" lazy-init="default" autowire="default" dependency-check="default">
		<property name="loginFormUrl">
			<value>/logon.jsp</value>
		</property>
		<property name="forceHttps">
			<value>false</value>
		</property>
	</bean>

   <bean id="httpRequestAccessDecisionManager" class="org.acegisecurity.vote.AffirmativeBased">
      <property name="allowIfAllAbstainDecisions"><value>false</value></property>
      <property name="decisionVoters">
         <list>
            <ref bean="roleVoter"/>
         </list>
      </property>
   </bean>
   
   <bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter"/>

   <!-- Note the order that entries are placed against the objectDefinitionSource is critical.
        The FilterSecurityInterceptor will work from the top of the list down to the FIRST pattern that matches the request URL.
        Accordingly, you should place MOST SPECIFIC (ie a/b/c/d.*) expressions first, with LEAST SPECIFIC (ie a/.*) expressions last -->
   <bean id="filterInvocationInterceptor" class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
      <property name="authenticationManager"><ref bean="authenticationManager"/></property>
      <property name="accessDecisionManager"><ref local="httpRequestAccessDecisionManager"/></property>
      <property name="objectDefinitionSource">
         <value>
			    CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
			    PATTERN_TYPE_APACHE_ANT
			    /index.jsp=ROLE_ANONYMOUS,ROLE_USER
			    /logon.jsp*=ROLE_ANONYMOUS,ROLE_USER
				/**=ROLE_ADM,ROLE_LOGIN
         </value>
      </property>
   </bean>

</beans>

